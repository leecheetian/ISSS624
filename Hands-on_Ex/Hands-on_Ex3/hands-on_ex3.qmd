---
title: "Hands-on Exercise 3"
author: "Lee Chee Tian"
editor: visual
---

# Geographical Segmentation with Spatially Constrained Clustering Techniques

## Overview

This hands-on exercise demonstrates how homogeneous regions can be carved out using geographically referenced multivariate data. The two main types of analysis that are performed for this purpose are:

-   hierarchical cluster analysis
-   spatially constrained cluster analysis

## Getting Started

### The Analytical Problem

To delineate Shan State, Myanmar into homogeneous regions by using multiple Information and Communication Technology (ICT) measures, namely: Radio, Television, Land Line Phone, Mobile Phone, Computer, and Internet at home.

### The Data

#### ![](geospatial%20screen.jpg)

![](aspatial%20screen.jpg)

### Installing and Loading R Packages

The R packages needed for this hands-on exercise include:

-   Spatial data handling
    -   **sf**, **rgdal** and **spdep**
-   Attribute data handling
    -   **tidyverse**, especially **readr**, **ggplot2** and **dplyr**
-   Choropleth mapping
    -   **tmap**
-   Multivariate data visualization and analysis
    -   **coorplot**, **ggpubr**, and **heatmaply**
-   Cluster analysis
    -   **cluster**

    -   **ClustGeo**

```{r}
pacman::p_load(rgdal, spdep, tmap, sf, ggpubr, cluster, 
               factoextra, NbClust, heatmaply, corrplot, 
               psych, tidyverse)
```

## Data Import and Prepatation

### Importing geospatial data into R environment

```{r}
shan_sf <- st_read(dsn = "data/geospatial", 
                   layer = "myanmar_township_boundaries") %>%
  filter(ST %in% c("Shan (East)", "Shan (North)", "Shan (South)"))
```

```{r}
shan_sf
```

```{r}
glimpse(shan_sf)
```

### Importing aspatial data into R environment

```{r}
ict <- read_csv ("data/aspatial/Shan-ICT.csv")
```

```{r}
summary(ict)
```

### Deriving new variables using *dplyr* package

```{r}
ict_derived <- ict %>%
  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %>%
  mutate(`TV_PR` = `Television`/`Total households`*1000) %>%
  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %>%
  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %>%
  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %>%
  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %>%
  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,
         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,
         `TT_HOUSEHOLDS`=`Total households`,
         `RADIO`=`Radio`, `TV`=`Television`, 
         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,
         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) 
```

```{r}
summary(ict_derived)
```

## Exploratory Data Analysis (EDA)

### EDA using statistical graphics

#### Histogram showing distribution of radio-owning household counts across townships

```{r}
ggplot(data = ict_derived, 
       aes(x = `RADIO`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")
```

#### Boxplot showing outliers in household counts

```{r}
ggplot(data = ict_derived, 
       aes(x = `RADIO`)) +
  geom_boxplot(color = "black", 
               fill = "light blue")
```

#### Histogram showing distribution of radio penetration rate across townships

```{r}
ggplot(data = ict_derived, 
       aes(x = `RADIO_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")
```

#### Boxplot showing outlier in radio penetration rate

```{r}
ggplot(data = ict_derived, 
       aes(x = `RADIO_PR`)) +
  geom_boxplot(color = "black", 
               fill = "light blue")
```

The above histograms and boxplots show that the distribution of the absolute counts of radio-owning households is heavily skewed to the left, with some outliers to the far right, a result likely due to the uneven size and population of the various townships, with most numbered around 2,500 figure, and only a few rare ones that are sized above 10,000, forming those outliers.

But when the radio penetration is calculated as a factor of the township population, the resultant distribution appears more even and approaches a normal spread. The number of outliers has also reduced to just 1 from the earlier count of 3.

#### Distribution of various ICT penetration rates across townships

```{r}
radio <- ggplot(data = ict_derived, 
             aes(x = `RADIO_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")

tv <- ggplot(data = ict_derived, 
             aes(x = `TV_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")

llphone <- ggplot(data = ict_derived, 
             aes(x = `LLPHONE_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")

mphone <- ggplot(data = ict_derived, 
             aes(x = `MPHONE_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")

computer <- ggplot(data = ict_derived, 
             aes(x = `COMPUTER_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")

internet <- ggplot(data = ict_derived, 
             aes(x = `INTERNET_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")
```

```{r}
ggarrange(radio, tv, llphone, mphone, computer, internet, 
          ncol = 3, 
          nrow = 2)
```

It appears that radios, TVs and mobile phones are more normally distributed among households across townships, suggesting more common ownership of these items by households, while land line phones, computers and internet are heavily left-skewed and thus less commonly owned.

### EDA using choropleth map

#### Joining geospatial data with aspatial data

```{r}
shan_sf <- left_join(shan_sf, 
                     ict_derived, 
                     by = c("TS_PCODE" = "TS_PCODE"))
```

#### Preparing a choropleth map

Plotting choropleth map showing the distribution of radio penetration rate across townships in Shan State:

```{r}
qtm(shan_sf, "RADIO_PR")
```

Plotting choropleth map showing the distribution of radio-owning household counts across townships. It is observed that these counts distribution mostly coincide with the townships' total household counts distribution:

```{r}
TT_HOUSEHOLDS.map <- tm_shape(shan_sf) + 
  tm_fill(col = "TT_HOUSEHOLDS",
          n = 5,
          style = "jenks", 
          title = "Total households") + 
  tm_borders(alpha = 0.5) 

RADIO.map <- tm_shape(shan_sf) + 
  tm_fill(col = "RADIO",
          n = 5,
          style = "jenks",
          title = "Number Radio ") + 
  tm_borders(alpha = 0.5) 

tmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,
             asp = NA, ncol = 2)
```

However, when plotted as penetration rate instead of as actual count, it reveals that the distribution may not necessarily be in line with the townships' total household counts distribution. Some townships with lower number of households may actually have higher radio penetration rate than townships with higher number of households, and vice versa:

```{r}
tm_shape(shan_sf) +
    tm_polygons(c("TT_HOUSEHOLDS", "RADIO_PR"),
                style = "jenks") +
    tm_facets(sync = TRUE, ncol = 2) +
  tm_legend(legend.position = c("right", "bottom"))+
  tm_layout(outer.margins = 0, asp = 0)
```

## Correlation Analysis

To eliminate cluster variables that are highly correlated, so that they do not combine to overwhelm the subsequent cluster analysis process:

```{r}
cluster_vars.cor = cor(ict_derived[,12:17])
corrplot.mixed(cluster_vars.cor,
         lower = "ellipse", 
               upper = "number",
               tl.pos = "lt",
               diag = "l",
               tl.col = "black")
```

The COMPUTER_PR and INTERNET_PR variables are found to be highly correlated, hence only one of them should be used in the subsequent cluster analysis step.

## Hierarchy Cluster Analysis

### Extrating cluster variables

Extracting cluster variables from the *shan_sf* simple feature object into data.frame:

```{r}
cluster_vars <- shan_sf %>%
  st_set_geometry(NULL) %>%
  select("TS.x", "RADIO_PR", "TV_PR", "LLPHONE_PR", "MPHONE_PR", "COMPUTER_PR")
head(cluster_vars, 10)
```

Changing the rows by township name instead of row number:

```{r}
row.names(cluster_vars) <- cluster_vars$"TS.x"
head(cluster_vars, 10)
```

Deleting the TS.x column:

```{r}
shan_ict <- select(cluster_vars, c(2:6))
head(shan_ict, 10)
```

### Data Standardization

#### Min-Max standardization

```{r}
shan_ict.std <- normalize(shan_ict)
summary(shan_ict.std)
```

#### Z-score standardization

```{r}
shan_ict.z <- scale(shan_ict)
describe(shan_ict.z)
```

### Visualizing the standardized cluster variables

```{r}
r <- ggplot(data = ict_derived, 
             aes(x = `RADIO_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue")

shan_ict_s_df <- as.data.frame(shan_ict.std)
s <- ggplot(data = shan_ict_s_df, 
       aes(x = `RADIO_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue") +
  ggtitle("Min-Max Standardization") +
  theme(plot.title = element_text(size = 10.5))

shan_ict_z_df <- as.data.frame(shan_ict.z)
z <- ggplot(data = shan_ict_z_df, 
       aes(x = `RADIO_PR`)) +
  geom_histogram(bins = 20, 
                 color = "black", 
                 fill = "light blue") +
  ggtitle("Z-score Standardization") +
  theme(plot.title = element_text(size = 10.5))

ggarrange(r, s, z,
          ncol = 3,
          nrow = 1)
```

### Computing proximity matrix

```{r}
proxmat <- dist(shan_ict, method = 'euclidean')
proxmat
```

### Computing hierarchical clustering

```{r}
hclust_ward <- hclust(proxmat, method = 'ward.D')
```

```{r}
plot(hclust_ward, cex = 0.6)
```

### Selecting the optimal clustering algorithm

```{r}
m <- c("average", "single", "complete", "ward")
names(m) <- c("average", "single", "complete", "ward")

ac <- function(x) {
  agnes(shan_ict, method = x)$ac
}

map_dbl(m, ac)
```

### Determining optimal clusters

#### Gap Statistic Method

```{r}
set.seed(12345)
gap_stat <- clusGap(shan_ict, 
                    FUN = hcut, 
                    nstart = 25, 
                    K.max = 10, 
                    B = 50)
# Print the result
print(gap_stat, method = "firstmax")
```

```{r}
fviz_gap_stat(gap_stat)
```

From the gap statistic graph above, disregarding the option of having a single cluster for all observations, the 6-cluster appears to give the largest gap statistic and therefore should be the best cluster number to pick.

### Interpreting the dendrograms

```{r}
plot(hclust_ward, cex = 0.6)
rect.hclust(hclust_ward, 
            k = 6, 
            border = 2:5)
```

### Visually-driven hierarchical clustering analysis

#### Transforming the data frame into a matrix

```{r}
shan_ict_mat <- data.matrix(shan_ict)
```

#### Plotting interactive cluster heatmap using *heatmaply()*

```{r}
heatmaply(normalize(shan_ict_mat),
          Colv = NA,
          dist_method = "euclidean",
          hclust_method = "ward.D",
          seriate = "OLO",
          colors = Blues,
          k_row = 6,
          margins = c(NA,200,60,NA),
          fontsize_row = 4,
          fontsize_col = 5,
          main = "Geographic Segmentation of Shan State by ICT indicators",
          xlab = "ICT Indicators",
          ylab = "Townships of Shan State"
          )
```

### Mapping the clusters formed

```{r}
groups <- as.factor(cutree(hclust_ward, k = 6))
```

```{r}
shan_sf_cluster <- cbind(shan_sf, as.matrix(groups)) %>%
  rename(`CLUSTER` = `as.matrix.groups.`)
```

```{r}
qtm(shan_sf_cluster, "CLUSTER")
```

The clusters formed in the choropleth map above appear very fragmented. This is because the hierarchical cluster analysis method used does not take into consideration spatial constraints when performing clustering of the townships.

## Spatially Constrained Clustering - SKATER approach

### Converting into SpatialPolygonsDataFrame

```{r}
shan_sp <- as_Spatial(shan_sf)
```

### Computing neighbour list

```{r}
shan.nb <- poly2nb(shan_sp)
summary(shan.nb)
```

```{r}
plot(shan_sp, 
     border=grey(.5))
plot(shan.nb, 
     coordinates(shan_sp), 
     col = "blue", 
     add = TRUE)
```

### Computing minimum spanning tree

#### Calculating edge costs

```{r}
lcosts <- nbcosts(shan.nb, shan_ict)
```

```{r}
shan.w <- nb2listw(shan.nb, 
                   lcosts, 
                   style = "B")
summary(shan.w)
```

#### Computing minimum spanning tree

```{r}
shan.mst <- mstree(shan.w)
```

```{r}
class(shan.mst)
```

```{r}
dim(shan.mst)
```

```{r}
head(shan.mst)
```

```{r}
plot(shan_sp, border = gray(.5))
plot.mst(shan.mst, 
         coordinates(shan_sp), 
         col = "blue", 
         cex.lab = 0.7, 
         cex.circles = 0.005, 
         add = TRUE)
```

### Computing spatially constrained clusters using SKATER method

```{r}
clust6 <- skater(edges = shan.mst[,1:2], 
                 data = shan_ict, 
                 method = "euclidean", 
                 ncuts = 5)
```

```{r}
str(clust6)
```

```{r}
ccs6 <- clust6$groups
ccs6
```

```{r}
table(ccs6)
```

```{r}
plot(clust6, 
     coordinates(shan_sp), 
     cex.lab = 0.7,
     groups.colors = c("red", "green", "blue", "brown", "pink", "purple"),
     cex.circles = 0.005)
plot(shan_sp, border = gray(.5), add = TRUE)
```

### Visualizing the clusters in choropleth map

```{r}
groups_mat <- as.matrix(clust6$groups)
shan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%
  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)
qtm(shan_sf_spatialcluster, "SP_CLUSTER")
```

```{r}
hclust.map <- qtm(shan_sf_cluster,
                  "CLUSTER") + 
  tm_borders(alpha = 0.5) 

shclust.map <- qtm(shan_sf_spatialcluster,
                   "SP_CLUSTER") + 
  tm_borders(alpha = 0.5) 

tmap_arrange(hclust.map, shclust.map,
             asp = NA, ncol = 2)
```

The spatially constrained clusters on the right appear more geographically organized than the unconstrained hierarchical clusters created earlier on the left. It will be more feasible to implement or roll out any strategies or policies to the regions on the ground physically based on the right clusters than the left ones.
